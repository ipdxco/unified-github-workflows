name: test & maybe release
on:
  workflow_call:
    inputs:
      branches:
        required: false
        type: string
        default: ${{ format('["{0}"]', github.event.repository.default_branch) }}
    secrets:
      DOCKER_TOKEN:
        required: false
      DOCKER_USERNAME:
        required: false
      NPM_TOKEN:
        required: false
      UCI_GITHUB_TOKEN:
        required: false

defaults:
  run:
    shell: bash

jobs:

  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: lts/*
    - uses: ipfs/aegir/actions/cache-node-modules@master
    - run: npm run --if-present lint
    - run: npm run --if-present dep-check
    - run: npm run --if-present doc-check

  test-node:
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        node: [lts/*]
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - run: npm run --if-present test:node
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          flags: node
          files: .coverage/*,packages/*/.coverage/*

  test-chrome:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - run: npm run --if-present test:chrome
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          flags: chrome
          files: .coverage/*,packages/*/.coverage/*

  test-chrome-webworker:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - run: npm run --if-present test:chrome-webworker
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          flags: chrome-webworker
          files: .coverage/*,packages/*/.coverage/*

  test-firefox:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - run: npm run --if-present test:firefox
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          flags: firefox
          files: .coverage/*,packages/*/.coverage/*

  test-firefox-webworker:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - run: npm run --if-present test:firefox-webworker
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          flags: firefox-webworker
          files: .coverage/*,packages/*/.coverage/*

  test-webkit:
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node: [lts/*]
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - run: npm run --if-present test:webkit
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          flags: webkit
          files: .coverage/*,packages/*/.coverage/*

  test-webkit-webworker:
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node: [lts/*]
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - run: npm run --if-present test:webkit-webworker
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          flags: webkit-webworker
          files: .coverage/*,packages/*/.coverage/*

  test-electron-main:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - run: npx xvfb-maybe npm run --if-present test:electron-main
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          flags: electron-main
          files: .coverage/*,packages/*/.coverage/*

  test-electron-renderer:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - run: npx xvfb-maybe npm run --if-present test:electron-renderer
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          flags: electron-renderer
          files: .coverage/*,packages/*/.coverage/*

  release-check:
    needs: [test-node, test-chrome, test-chrome-webworker, test-firefox, test-firefox-webworker, test-webkit, test-webkit-webworker, test-electron-main, test-electron-renderer]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    outputs:
      release: ${{ steps.branch.outputs.release }}
    steps:
      - id: branch
        name: Check if the branch is a release branch
        env:
          BRANCHES: ${{ inputs.branches }}
          REF: ${{ github.ref }}
        uses: actions/github-script@v6
        with:
          script: |
            const branches = JSON.parse(process.env.BRANCHES);
            const ref = process.env.REF.replace(/^refs\/heads\//, '');
            const release = branches.some(b => {
              const regexPattern = b.replace(/\*/g, '.*');
              const regex = new RegExp(`^${regexPattern}$`);
              return regex.test(ref);
            });
            console.log(`This is a release branch: ${release}`);
            core.setOutput('release', release);

  release:
    needs: [release-check]
    runs-on: ubuntu-latest
    if: needs.release-check.outputs.release == 'true'
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - uses: ipfs/aegir/actions/cache-node-modules@master
      - uses: ipfs/aegir/actions/docker-login@master
        with:
          docker-token: ${{ secrets.DOCKER_TOKEN }}
          docker-username: ${{ secrets.DOCKER_USERNAME }}
      - run: npm run --if-present release
        env:
          GITHUB_TOKEN: ${{ secrets.UCI_GITHUB_TOKEN || github.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
